@use 'functions' as *;
@use 'mixins' as *;

.switcher {
  position: relative;
  background-color: semantic-color(kind-opacity-active);
  display: flex;
  align-items: center;

  border-radius: 25rem;
  padding: 0 0.5rem;

  box-sizing: border-box;
  transition: background-color variable(transition-duration_shorter) variable(transition-timing-function_common);
  outline: none;
  cursor: pointer;

  &__marker {
    background-color: semantic-color(surface-primary);
    border-radius: 50%;
    box-shadow: 0px 0px 1rem semantic-color(kind-opacity-normal);

    transition: transform variable(transition-duration_shorter) variable(transition-timing-function_common),
      background-color variable(transition-duration_shorter) variable(transition-timing-function_common);
    transform: translateX(0);
    will-change: transform;
  }

  &_active {
    background-color: semantic-color(kind-primary-normal);

    .switcher__marker {
      transform: translateX(100%);
    }
  }

  &:after {
    position: absolute;
    top: -0.5rem;
    left: -0.5rem;
    right: -0.5rem;
    bottom: -0.5rem;
    content: '';
    border-radius: 25rem;
    border: 0.5rem solid transparent;

    pointer-events: none;
  }

  &:not(.switcher_disabled) {
    @include hover() {
      &.switcher_active {
        background-color: semantic-color(kind-primary-hover);
      }
      background-color: semantic-color(kind-neutral-hover);
    }

    &:focus-visible {
      outline: none;

      &:after {
        border-color: semantic-color(lines-accent);
      }
    }
  }

  &_disabled {
    background-color: semantic-color(kind-opacity-active);
    cursor: not-allowed;

    .switcher__marker {
      background-color: semantic-color(icons-disabled);
    }
  }
}

// sizes
.switcher {
  &_medium {
    width: 9rem;
    height: 5rem;

    .switcher__marker {
      width: 4rem;
      height: 4rem;
    }
  }

  &_small {
    width: 7rem;
    height: 4rem;

    .switcher__marker {
      width: 3rem;
      height: 3rem;
    }
  }
}
