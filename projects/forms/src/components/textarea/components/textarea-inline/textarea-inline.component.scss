@use 'functions' as *;
@use 'mixins' as *;
@use 'variables' as *;

@use './../../textarea.styles';

.textarea-wrapper {
  display: grid;
}

.textarea-inline {
  display: block;
  box-sizing: border-box;
  border: 1px solid transparent;
  border-radius: $controlBorderRadius;
  white-space: nowrap;
  cursor: text;
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;

  @include font-preset-caption-xs();
  @include ellipsis-text-overflow;

  &.large {
    min-height: 10rem;
    padding: 3rem 2rem;
  }

  &.medium {
    min-height: 8rem;
    padding: 2rem 2rem;
  }

  &_disabled {
    cursor: not-allowed;
  }

  &__content {
    transition: 0.3s;

    &_hidden {
      opacity: 0;
    }
  }

  &:not(.textarea-inline_collapsed) {
    border-color: semantic-color(kind-primary-normal);
  }
}

.textarea-inline {
  background-color: semantic-color(surface-primary);
  border-color: semantic-color(lines-opacity);
}

// control colors
.textarea-inline {
  color: semantic-color(text-primary);

  .textarea-inline__placeholder {
    color: semantic-color(text-secondary);
  }
}

.textarea-inline.textarea-inline_collapsed {
  &:not(.textarea-inline_disabled) {
    @include hover() {
      background-color: semantic-color(surface-tertiary);
      border-color: semantic-color(kind-primary-normal);

      .textarea-inline__placeholder {
        color: semantic-color(text-primary);
      }
    }

    &.textarea-inline_invalid {
      border-color: semantic-color(kind-danger-normal);
    }
  }
}

.textarea-inline_disabled {
  color: semantic-color(text-disabled);
  background-color: semantic-color(kind-neutral-disabled);

  .textarea-inline__placeholder {
    color: semantic-color(text-disabled);
  }
}

.overlay-container {
  width: 100%;
  height: 100%;
  padding-left: 8px;
  box-sizing: border-box;

  .overlay-textarea {
    position: relative;
  }

  .textarea {
    transition: 0.25s;
    transform-origin: right center;
    transform: scaleX(0.5);
  }

  &_opened {
    .textarea {
      transform: scaleX(1);
    }
  }

  @include xs() {
    position: fixed;
    bottom: 16px;
    left: 0;
    height: auto;
    padding: 0 20px 32px 20px;

    .textarea {
      transform: none;
    }

    &_opened {
      .textarea {
        transform: none;
      }
    }
  }
}

.textarea {
  box-shadow: 0 8px 24px rgba(0, 23, 32, 0.04);

  &__pseudo-content,
  &__control {
    padding: 2rem 10rem 2rem 3rem;
  }

  @include xs {
    width: 100%;
    position: relative;
    transform: none;
  }
}

.close-icon {
  --pseudoIndentSize: 1rem;
  position: absolute;
  top: 50%;
  right: 2rem;
  transform: translateY(calc(-50% + var(--pseudoIndentSize)));
  z-index: 2;
  font-size: 4rem;
  padding: var(--pseudoIndentSize);
  margin: calc(var(--pseudoIndentSize) * -1);
  cursor: pointer;
  pointer-events: all;
  color: semantic-color(icons-secondary);

  &:hover {
    color: semantic-color(kind-primary-hover);
  }
}

.counter_overlay {
  position: absolute;
  right: 0;
}

.counter_invisible {
  visibility: hidden;
}

.counter_mobile {
  color: semantic-color(text-secondary);
}

.overlay-textarea {
  .textarea:not(.textarea_disabled) {
    border-color: transparent;

    &:focus-within {
      background-color: semantic-color(surface-primary);
      border: 1px solid semantic-color(lines-opacity);
      @include blur();

      .textarea__control::placeholder {
        color: semantic-color(text-primary);
      }
    }
  }
}
