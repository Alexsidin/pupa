@use 'functions' as *;
@use 'mixins' as *;
@use 'variables' as *;

$box-shadow-selector-item-color: rgba(0, 0, 0, 0.08);

:host {
  box-sizing: border-box;
  width: 8rem;
  height: 8rem;

  @include font-preset-caption-m();

  line-height: 7rem;

  text-transform: capitalize;
  text-align: center;

  &.medium {
    width: 7rem;
    height: 7rem;

    @include font-preset-caption-xs();
    line-height: 6rem;
  }

  &.small {
    width: 6rem;
    height: 6rem;

    @include font-preset-caption-xxs();
    line-height: 5rem;
  }
}

.day-selector-item {
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  border-radius: $controlBorderRadius;
  border: 0.5rem solid transparent;
  cursor: pointer;

  color: semantic-color(text-primary);

  @include transition();
  transition-property: background-color, border-color;

  &__content {
    width: 100%;
    height: 100%;
    border-radius: 0.5rem;
    overflow: hidden;
  }

  &:focus {
    outline: none;
    border-color: semantic-color(kind-primary-hover) !important;
  }

  &:hover:not(.selected):not(.disabled) {
    background: semantic-color(kind-neutral-hover);
  }

  &.selected {
    color: semantic-color(text-primary);
  }

  &.selected &__content {
    box-shadow: 1px 1px 5px $box-shadow-selector-item-color;

    background: semantic-color(surface-secondary);
  }

  &:hover.selected:not(.disabled) {
    border-color: semantic-color(kind-neutral-normal);
  }

  &.disabled {
    cursor: not-allowed;

    color: semantic-color(text-disabled);
  }

  &.disabled.selected &__content {
    background: semantic-color(kind-neutral-pressed);
  }
}
