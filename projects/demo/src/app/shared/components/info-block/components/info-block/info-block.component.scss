@use 'mixins' as *;
@use 'functions' as *;
@use 'variables' as *;

$color_light-info: color(primary-50);
$color_dark_info: color(primary-600);

$color_light-note: color(base-dark-n100);
$color_dark-note: color(base-dark-n300);

$color_light-success: color(success-150);
$color_dark-success: color(success-600);

$color_light-warning: color(yellow-n100);
$color_dark-warning: color(yellow-n550);

$color_light-error: color(danger-150);
$color_dark-error: color(danger-600);

@mixin base-info-block($lightColor, $darkColor) {
  background-color: $lightColor;
  .icon {
    color: $darkColor;
  }

  @include host-selector-dark-theme {
    background-color: $darkColor;
    .icon {
      color: $lightColor;
    }
  }
}

:host {
  display: block;
  margin-bottom: 3rem;
}

.info-block {
  display: flex;
  border-radius: $controlBorderRadius;
  padding: 2rem;

  .icon {
    font-size: 5rem;
    line-height: 4rem;
    margin-right: 2rem;
  }

  &.info {
    @include base-info-block($color_light-info, $color_dark-info);
  }

  &.note {
    @include base-info-block($color_light-note, $color_dark-note);
  }

  &.success {
    @include base-info-block($color_light-success, $color_dark-success);
  }

  &.warning {
    @include base-info-block($color_light-warning, $color_dark-warning);

    @include host-selector-dark-theme {
      color: color(neutral-1000);
      .icon {
        color: color(danger-600);
      }
    }
  }

  &.error {
    @include base-info-block($color_light-error, $color_dark-error);
  }
}
