@use 'sass:map';
@use 'sass:string';
@use 'functions' as *;
@use 'mixins' as *;
@use 'variables' as *;

@use './input.styles';

$width_time: 29rem;
$width_time-seconds: 33rem;
$width_date: 37rem;
$width_date-time: 45rem;
$width_date-seconds: 50rem;

$width_date-range: 60rem;

:host {
  display: block;
  box-sizing: border-box;
  width: 100%;
}

.base-input-container {
  &.time.fixed-size {
    width: $width_time;

    &.time-seconds {
      width: $width_time-seconds;
    }
  }

  &.date.fixed-size {
    width: $width_date;

    &.time {
      width: $width_date-time;
    }
    &.time-seconds {
      width: $width_date-seconds;
    }
  }

  &.date-range.fixed-size {
    width: $width_date-range;
  }
}

.time-input-container {
  position: relative;

  background-color: transparent;
  border-radius: 2rem;

  &__shape-container {
    position: absolute;
    left: 1px;
    top: 0;
    right: 0;
    bottom: 0;
    @include font-type-regular();
    z-index: 3;
    font-size: 3rem;
    line-height: 4rem;
    padding: 2rem 4rem;
    color: color(base-n600);
    @include host-selector-dark-theme() {
      color: color(base-n0);
    }
    display: flex;
    pointer-events: none;
  }

  &__shape-left {
    display: inline;
    color: transparent;
    white-space: break-spaces;
  }

  &__shape-right {
    display: inline;
    color: inherit;
    white-space: break-spaces;
  }
}

.integrated-space {
  line-height: inherit;
  font-size: inherit;
}

.input[disabled] ~ .time-input-container__shape-container {
  color: map.get($input_light_styles, disabled, placeholder, color);
  @include host-selector-dark-theme() {
    color: map.get($input_dark_styles, disabled, placeholder, color);
  }
}
