@use 'functions' as *;
@use 'mixins' as *;

:host {
  display: block;
  width: 100%;
}

.option {
  box-sizing: border-box;
  height: 8rem;
  width: 100%;
  cursor: pointer;
  position: relative;

  background-color: color(neutral-1);
  color: color(neutral-1000);

  padding: 1rem 5rem;
  user-select: none;

  @include font-preset-caption-xs();

  display: flex;
  align-items: center;

  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;

  transition: color variable(transition-duration_shorter) variable(transition-timing-function_common),
    background-color variable(transition-duration_shorter) variable(transition-timing-function_common);

  --select-option-icon-color: #{color(base-white-n200)};

  &::after {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    content: '';
    width: 0.5rem;
    background-color: transparent;
    pointer-events: none;
  }

  &:not(.option_disabled) {
    @include hover() {
      background-color: color(base-white-n400);
      --select-option-icon-color: #{color(neutral-1000)};
    }
  }

  &_disabled {
    cursor: not-allowed;
    background-color: color(neutral-1);
    color: color(base-white-n275);
    --select-option-icon-color: #{color(base-white-n250)};
  }

  &_picked {
    background-color: color(base-white-n550);

    &::after {
      background-color: color(primary-n500);
    }
  }
}

// dark styles
.option {
  @include host-selector-dark-theme() {
    background-color: color(neutral-1000);
    color: color(neutral-1);

    --select-option-icon-color: #{color(base-dark-n100)};

    &:not(.option_disabled) {
      @include hover() {
        background-color: color(base-dark-n400);
        --select-option-icon-color: #{color(neutral-1)};
      }
    }

    &_disabled {
      background-color: color(neutral-1000);
      color: color(base-dark-n275);
      --select-option-icon-color: #{color(base-dark-n250)};
    }

    &_picked {
      background-color: color(base-dark-n550);
    }
  }
}
