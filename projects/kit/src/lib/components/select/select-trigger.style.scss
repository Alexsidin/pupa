@use 'mixins' as *;
@use 'functions' as *;
@use 'variables' as *;

:host {
  box-sizing: border-box;
  position: relative;
  width: 100%;
}

.trigger {
  box-sizing: border-box;

  width: 100%;
  height: 8rem;

  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;

  cursor: pointer;

  border-radius: $controlBorderRadius;
  border: none;

  color: color(base-n600);
  background-color: color(base-white-n500);

  transition: color variable(transition-duration_shorter) variable(transition-timing-function_common),
    background-color variable(transition-duration_shorter) variable(transition-timing-function_common);

  font-size: 3rem;
  line-height: 4rem;
  @include font-type-caption();
  padding: 1rem 3rem;
  padding-right: 14px;

  &:not(.trigger_disabled) {
    &:not(.trigger_active) {
      @include hover() {
        background-color: color(base-white-n400);

        .placeholder.on-hover {
          opacity: 1;
        }
      }
    }

    &.trigger_invalid {
      border: 1px solid color(red-n400);
    }
  }

  &_active {
    background-color: color(base-white-n500);

    .placeholder.on-hover {
      opacity: 1;
    }
  }

  &_active ~ .icons {
    .icons__icon-reset {
      opacity: 1;
    }
  }

  &_disabled {
    background-color: color(base-white-n500);
    color: color(base-dark-n250);
    cursor: not-allowed;

    .trigger__rotate-icon {
      color: color(base-dark-n250);
    }

    .placeholder {
      color: color(base-white-n275);
    }
  }

  &__text {
    flex: 1;

    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    height: 100%;

    margin-right: 2rem;

    @include ellipsis-text-overflow;
  }

  &__rotate-icon {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    color: color(base-n600);
    font-size: 3rem;
    margin-left: 1rem;
    transition: transform variable(transition-duration_shorter) variable(transition-timing-function_common);
    transform-origin: center;

    &.expanded {
      transform: rotate(180deg);
    }
  }
}

// dark styles
.trigger {
  @include host-selector-dark-theme() {
    color: color(base-n0);
    background-color: color(base-dark-n500);

    &:not(.trigger_disabled) {
      &:not(.trigger_active) {
        @include hover() {
          background-color: color(base-dark-n400);
        }
      }
    }

    &__rotate-icon {
      color: color(base-n0);
    }

    &_active {
      background-color: color(base-dark-n500);
    }

    &_disabled {
      background-color: color(base-dark-n500);
      color: color(base-dark-n250);

      .placeholder {
        color: color(base-dark-n275);
      }
    }
  }
}

.placeholder {
  color: color(base-white-n100);
  width: 100%;
  text-align: left;
  opacity: 1;
  will-change: opacity;
  transition: opacity variable(transition-duration_shorter) variable(transition-timing-function_common);
  align-self: center;

  &.on-hover {
    opacity: 0;
  }

  @include host-selector-dark-theme() {
    color: color(base-dark-n100);
  }
}

.icons {
  z-index: 3;
  position: absolute;
  overflow: hidden;
  top: 1px;
  bottom: 1px;
  right: 7.5rem;
  box-sizing: border-box;
  height: calc(100% - 2px);
  @include flex-container(row, center);
  width: fit-content;
  background-color: transparent;
  gap: 1px;
}
