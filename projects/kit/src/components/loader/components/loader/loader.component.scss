@use 'mixins';
@use 'functions';

@keyframes pupa-rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

:host {
  @include mixins.flex-container(column, center, center, nowrap);
}

.pupa-loader {
  all: unset;
  overflow: hidden;
  color: inherit;
  @include mixins.inline-flex-container(row, center, center, nowrap);

  &__determinate-icon,
  &__indeterminate-icon {
    height: 100%;
    width: 100%;
    fill: none;
    stroke-width: 2px;
    stroke-linecap: round;
    stroke: currentColor;

    &_background {
      stroke: functions.semantic-color(kind-neutral-normal);
    }
  }

  &__determinate-icon {
    transform: rotate(-90deg);

    &_scale {
      stroke: functions.semantic-color(kind-warning-normal);
      transition: stroke-dashoffset 0.6s ease-in;
    }

    &_success {
      stroke: functions.semantic-color(kind-success-normal);
      transition: stroke-dashoffset 0.6s ease-in, stroke 0.6s step-end;
    }
  }

  &__indeterminate-icon {
    animation: 0.86s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite pupa-rotate;

    &_scale {
      stroke-dasharray: 20rem;
      stroke-dashoffset: 16.25rem;
    }

    &_default {
      color: inherit;
    }

    &_success {
      stroke: functions.semantic-color(kind-success-normal);
    }

    &_warning {
      stroke: functions.semantic-color(kind-warning-normal);
    }

    &_danger {
      stroke: functions.semantic-color(kind-danger-normal);
    }
  }

  &__error-icon {
    color: functions.semantic-color(kind-danger-normal);
    height: 60%;
    width: 60%;
  }
}
