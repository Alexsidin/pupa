@use 'functions';
@use 'mixins';
@use 'variables';

:host {
  width: 100%;
}

.pupa-accordion {
  border-radius: variables.$controlBorderRadius;

  &_normal#{&}_expanded {
    background-color: functions.semantic-color(surface-tertiary);
  }

  &_border-bottom#{&}_expanded {
    .pupa-accordion-header {
      border-radius: 1rem;
      background-color: functions.semantic-color(kind-neutral-hover);
    }
  }

  &_border-bottom {
    &:not(:hover) {
      border-radius: 0;
      box-shadow: 0 0.25rem 0 0 functions.semantic-color(lines-normal);
    }
  }

  &_normal {
    @include mixins.hover() {
      .pupa-accordion-header {
        background-color: functions.semantic-color(kind-opacity-hover);
      }
    }
  }

  &_border {
    border: 1px solid functions.semantic-color(lines-normal);
  }
}

$width_arrow-icon: 14px;

.pupa-accordion-header {
  display: flex;
  width: 100%;
  padding: 3rem;
  box-sizing: border-box;
  border-radius: variables.$controlBorderRadius;
  cursor: pointer;
  gap: 4rem;

  &_expanded {
    border-radius: variables.$controlBorderRadius variables.$controlBorderRadius 0 0;
  }

  &_expanded.pupa-accordion-header_sticky {
    position: sticky;
    top: 0;
    z-index: 3;
  }

  &__content {
    flex: 1;
    @include mixins.ellipsis-text-overflow();
  }

  &__action {
    display: flex;
    align-items: center;
  }
}
