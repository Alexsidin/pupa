@use 'mixins' as *;
@use 'variables' as *;
@use 'functions' as *;

$width_thumb: 1.25rem;
$width-hover_thumb: 2.75rem;

$width_line: 1px;
$offset_line: calc(($width_scrollbar - $width_line) / 2);

:host {
  display: block;
  width: 100%;
  height: 100%;
  overflow: auto;
}

.pupa-scrollable {
  width: 100%;
  height: 100%;
  max-width: inherit;
  max-height: inherit;
  overflow-x: inherit;
  overflow-y: inherit;
  position: relative;

  &__content {
    display: var(--pupa-scrollable-content_display, block);
    flex-direction: var(--pupa-scrollable-content_flex-direction, row);
    padding: var(--pupa-scrollable-content_padding, initial);
    position: relative;
    z-index: 1;

    width: 100%;
    height: 100%;
    max-width: inherit;
    max-height: inherit;
    overflow-x: inherit;
    overflow-y: inherit;
    box-sizing: border-box;

    @include invisible-scrollbars;
  }

  &_with-horizontal {
    height: calc(100% - $width_scrollbar);
  }

  &_with-vertical {
    width: calc(100% - $width_scrollbar);
  }
}

.pupa-scrollbar {
  position: absolute;
  z-index: 2;
  box-sizing: border-box;
  overflow: hidden;

  &__wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  &__thumb-container {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.5rem 0;
  }

  &_vertical {
    width: $width_scrollbar;
    height: 100%;
    right: 0;
    bottom: 0;
    display: none;

    &_external {
      transform: translateX(100%);
    }

    &_visible {
      display: block;
    }

    &_with-horizontal {
      height: calc(100% - #{$width_scrollbar});
      bottom: $width_scrollbar;
    }
  }

  &_horizontal {
    width: 100%;
    height: $width_scrollbar;
    right: 0;
    bottom: 0;
    display: none;

    &_external {
      transform: translateY(100%);
    }

    &_visible {
      display: block;
    }

    &_with-vertical {
      width: calc(100% - #{$width_scrollbar});
      right: $width_scrollbar;
    }
  }

  &:hover {
    .thumb {
      &__vertical {
        width: $width-hover_thumb;
      }
      &__horizontal {
        height: $width-hover_thumb;
      }
    }
  }
}

.thumb-container {
  position: absolute;
  z-index: 3;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  &_grabbing {
    .thumb {
      background-color: semantic-color(lines-dark);
      &__vertical {
        width: $width-hover_thumb;
      }
      &__horizontal {
        height: $width-hover_thumb;
      }
    }
  }

  &:not(.thumb-container_grabbing) {
    cursor: pointer;
  }

  &_visible-onscroll {
    &:not(.thumb-container_scrolling) {
      .thumb {
        transition: background-color 200ms ease-in;
        background-color: transparent;
        backdrop-filter: none;
      }
    }
  }

  &:not(.thumb-container_grabbing):hover {
    .thumb {
      &__vertical {
        width: $width-hover_thumb;
      }
      &__horizontal {
        height: $width-hover_thumb;
      }
    }
  }
}

.thumb {
  backdrop-filter: blur(1rem);
  box-sizing: content-box;
  background-color: semantic-color(lines-normal);
  border-radius: $width_thumb;
  &__vertical {
    width: $width_thumb;
    height: 100%;
  }
  &__horizontal {
    width: 100%;
    height: $width_thumb;
  }
}

.line {
  background-color: semantic-color(lines-normal);
  position: absolute;

  &__vertical {
    width: $width_line;
    height: calc(100% - 1rem);
    left: $offset_line;
    top: 0.5rem;
  }
  &__horizontal {
    width: calc(100% - 1rem);
    height: $width_line;
    left: 0.5rem;
    top: $offset_line;
  }
}
