@use 'mixins' as *;
@use 'variables' as *;
@use 'functions' as *;

$width_scrollbar-half: calc($width_scrollbar / 2);

$width_thumb: 1.25rem;
$width-hover_thumb: 2.75rem;

$width_line: 1px;
$offset_line: calc(($width_scrollbar - $width_line) / 2);

$padding_thumb-container: calc(($width_scrollbar - $width_thumb) / 2);
$padding-hover_hover-thumb-container: calc(($width_scrollbar - $width-hover_thumb) / 2);

:host {
  display: block;
  width: var(--pupa-scrollable-width, 100%);
  min-width: var(--pupa-scrollable-min-width, inherit);
  height: 100%;
  overflow: auto;
}

.pupa-scrollable {
  width: 100%;
  height: 100%;
  max-width: inherit;
  max-height: inherit;
  overflow-x: inherit;
  overflow-y: inherit;
  position: relative;

  &__content {
    display: var(--pupa-scrollable-content_display, block);
    flex-direction: var(--pupa-scrollable-content_flex-direction, row);
    padding: var(--pupa-scrollable-content_padding, initial);
    position: relative;
    z-index: 1;

    width: 100%;
    height: 100%;
    max-width: inherit;
    max-height: inherit;
    overflow-x: inherit;
    overflow-y: inherit;
    box-sizing: border-box;

    @include invisible-scrollbars;
  }
}

.pupa-scrollbar {
  position: absolute;
  z-index: 2;
  box-sizing: border-box;
  overflow: hidden;

  &__thumb-container {
    position: absolute;
  }

  &_vertical {
    width: $width_scrollbar;
    height: 100%;
    right: 0;
    bottom: 0;
    display: none;

    &_external {
      transform: translateX(100%);
    }

    &_visible {
      display: block;
    }

    &_with-horizontal {
      height: calc(100% - #{$width_scrollbar-half});
      bottom: $width_scrollbar-half;
    }

    &:hover {
      .thumb-container {
        padding: 0.5rem $padding-hover_hover-thumb-container;
      }
    }

    .thumb-container {
      padding: 0.5rem $padding_thumb-container;

      &_grabbing {
        padding: 0.5rem $padding-hover_hover-thumb-container;
      }
    }
  }

  &_horizontal {
    width: 100%;
    height: $width_scrollbar;
    right: 0;
    bottom: 0;
    display: none;

    &_external {
      transform: translateY(100%);
    }

    &_visible {
      display: block;
    }

    &_with-vertical {
      width: calc(100% - #{$width_scrollbar-half});
      right: $width_scrollbar-half;
    }

    &:hover {
      .thumb-container {
        padding: $padding-hover_hover-thumb-container 0.5rem;
      }
    }

    .thumb-container {
      padding: $padding_thumb-container 0.5rem;

      &_grabbing {
        padding: $padding-hover_hover-thumb-container 0.5rem;
      }
    }
  }
}

.thumb-container {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  z-index: 1;

  &:hover,
  &_grabbing {
    border-radius: $width-hover_thumb;
  }

  &_grabbing {
    .thumb {
      background-color: semantic-color(lines-dark);
    }
  }

  &:not(.thumb-container_grabbing) {
    cursor: pointer;
  }

  &_visible-onscroll {
    &:not(.thumb-container_scrolling) {
      .thumb {
        transition: background-color 200ms ease-in;
        background-color: transparent;
        backdrop-filter: none;
      }
    }
  }
}

.thumb {
  width: 100%;
  height: 100%;
  backdrop-filter: blur(4px);
  box-sizing: content-box;
  background-color: semantic-color(lines-normal);
  border-radius: $width_thumb;
}

.line {
  background-color: semantic-color(lines-normal);
  position: absolute;

  &__vertical {
    width: $width_line;
    height: calc(100% - 1rem);
    left: $offset_line;
    top: 0.5rem;
  }

  &__horizontal {
    width: calc(100% - 1rem);
    height: $width_line;
    left: 0.5rem;
    top: $offset_line;
  }
}
