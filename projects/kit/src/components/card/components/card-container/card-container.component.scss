@use 'mixins';
@use 'functions';
@use 'variables';

$normal-shadow-color: rgba(33, 33, 33, 0.08);
$hover-shadow-color: rgba(33, 33, 33, 0.1);
$disabled-shadow-color: rgba(33, 33, 33, 0.05);

:host {
  display: block;
  width: 100%;
  height: 100%;
  position: relative;
}

.pupa-container {
  display: block;
  height: 100%;
  width: 100%;
  box-sizing: border-box;

  border-radius: variables.$controlBorderRadius;
  border: 2px solid transparent;
  box-shadow: 0.5rem 0.75rem 2rem $normal-shadow-color;
  outline: none;

  background-color: functions.semantic-color(surface-secondary);
  color: functions.semantic-color(text-primary);

  &_disabled {
    color: functions.semantic-color(text-disabled);
    box-shadow: 0 0.25rem 1.75rem $disabled-shadow-color;
  }

  &:not(.pupa-container_disabled) {
    @include mixins.hover() {
      box-shadow: 0.5rem 0.75rem 2.5rem $hover-shadow-color;
    }
  }

  &_clickable:not(.pupa-container_disabled) {
    cursor: pointer;

    &:not(.pupa-container_selected) {
      &:focus {
        border: 2px solid functions.semantic-color(lines-accent);
      }
    }
  }

  &_selected:not(.pupa-container_disabled) {
    &::before {
      display: block;
      width: 1rem;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      content: '';
      background-color: functions.semantic-color(kind-primary-normal);
      border-radius: variables.$controlBorderRadius 0 0 variables.$controlBorderRadius;
    }
  }
}
