@use 'mixins';
@use 'functions';

$buttonLargeBorderRadius: 1rem;
$buttonMediumBorderRadius: 0.75rem;
$buttonSmallBorderRadius: 0.5rem;

:host {
  appearance: none;
  user-select: none;
  pointer-events: none;
  display: inline-block;
}

.pupa-button {
  all: unset;
  box-sizing: border-box;
  cursor: pointer;
  margin: 0;
  position: relative;
  display: flex;
  pointer-events: auto;

  @include mixins.no-tap-highlight();

  &_disabled {
    cursor: not-allowed;
  }

  &:focus-visible:not(:disabled) {
    outline: 0.5rem solid functions.semantic-color(lines-accent);
  }

  &__content {
    display: flex;
    align-items: center;
    pointer-events: none;
    z-index: 1;
    overflow: hidden;
    white-space: nowrap;
    gap: 2rem;

    &.pupa-reversed-direction {
      flex-direction: row-reverse;
    }

    .pupa-hidden {
      opacity: 0;
    }

    &-inner {
      white-space: nowrap;
      pointer-events: none;
      overflow: hidden;

      &:empty {
        display: none;
      }
    }
  }

  &__icon {
    min-width: 1em;
    pointer-events: none;
  }

  &__loading {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    display: flex;
    justify-content: center;
    align-items: center;

    pointer-events: none;
  }

  /** sizes */
  &_xl {
    height: 10rem;
    padding: 3rem;
    @include mixins.font-preset-h6();
    border-radius: $buttonLargeBorderRadius;

    .pupa-button__icon {
      font-size: 4rem;
    }
  }

  &_l {
    height: 8rem;
    padding: 2rem;
    @include mixins.font-preset-h6();
    border-radius: $buttonLargeBorderRadius;

    .pupa-button__icon {
      font-size: 4rem;
    }
  }

  &_m {
    height: 6rem;
    padding: 1rem 2rem;
    @include mixins.font-preset-h6();
    border-radius: $buttonMediumBorderRadius;

    &.pupa-icon-button {
      padding: 1.25rem;
      border-radius: 1rem;
    }

    .pupa-button__icon {
      font-size: 3.5rem;
    }
  }

  &_s {
    height: 5rem;
    padding: 0.5rem 1.5rem;
    @include mixins.font-preset-h6();
    border-radius: $buttonMediumBorderRadius;

    &.pupa-icon-button {
      padding: 1rem;
      border-radius: 1rem;
    }

    .pupa-button__icon {
      font-size: 3rem;
    }

    .pupa-button__content {
      gap: 1.5rem;
    }
  }

  &_xs {
    height: 4rem;
    padding: 0.5rem 1.5rem;
    @include mixins.font-preset-h7();
    border-radius: $buttonSmallBorderRadius;

    &.pupa-icon-button {
      padding: 0.5rem;
      border-radius: 1rem;
    }

    .pupa-button__icon {
      font-size: 3rem;
    }

    .pupa-button__content {
      gap: 1.5rem;
    }
  }

  /** colors */

  &_primary.pupa-button_active {
    background-color: functions.semantic-color(kind-primary-pressed);
  }

  &_primary {
    background-color: functions.semantic-color(kind-primary-normal);
    color: var(--button_text-color, functions.semantic-color(text-inverse));

    .pupa-button__icon {
      color: var(--button_icon-color, functions.semantic-color(icons-inverse));
    }

    &:not(:disabled) {
      @include mixins.hover() {
        background-color: functions.semantic-color(kind-primary-hover);
      }
      @include mixins.popover-trigger {
        background-color: functions.semantic-color(kind-primary-active);
      }
    }

    &:active:not(:disabled) {
      background-color: functions.semantic-color(kind-primary-active);
    }

    &:disabled {
      background-color: functions.semantic-color(kind-primary-disabled);
      color: functions.semantic-color(text-disabled);
      cursor: not-allowed;

      .pupa-button__icon {
        color: functions.semantic-color(icons-disabled);
      }
    }
  }

  &_secondary.pupa-button_active {
    background-color: functions.semantic-color(kind-opacity-pressed);
  }

  &_secondary {
    background-color: transparent;
    color: var(--button_text-color, functions.semantic-color(text-primary));

    .pupa-button__icon {
      color: var(--button_icon-color, functions.semantic-color(icons-primary));
    }

    &:not(:disabled) {
      @include mixins.hover() {
        background-color: functions.semantic-color(kind-opacity-hover);
      }
      @include mixins.popover-trigger {
        background-color: functions.semantic-color(kind-opacity-active);
      }
    }

    &:active:not(:disabled) {
      background-color: functions.semantic-color(kind-opacity-active);
    }

    &:disabled {
      color: functions.semantic-color(text-disabled);

      .pupa-button__icon {
        color: functions.semantic-color(icons-disabled);
      }
    }
  }

  &_border.pupa-button_active {
    background-color: functions.semantic-color(kind-opacity-pressed);
  }

  &_border {
    background-color: transparent;
    border: 0.25rem solid functions.semantic-color(lines-opacity);
    color: var(--button_text-color, functions.semantic-color(text-primary));

    .pupa-button__icon {
      color: var(--button_icon-color, functions.semantic-color(icons-primary));
    }

    &:not(:disabled) {
      @include mixins.hover() {
        background-color: functions.semantic-color(kind-opacity-hover);
      }
      @include mixins.popover-trigger {
        background-color: functions.semantic-color(kind-opacity-active);
      }
    }

    &:active:not(:disabled) {
      background-color: functions.semantic-color(kind-opacity-active);
    }

    &:disabled {
      color: functions.semantic-color(text-disabled);

      .pupa-button__icon {
        color: functions.semantic-color(icons-disabled);
      }
    }
  }

  &_success.pupa-button_active {
    background-color: functions.semantic-color(kind-success-pressed);
  }

  &_success {
    background-color: functions.semantic-color(kind-success-normal);
    color: var(--button_text-color, functions.semantic-color(text-inverse));

    .pupa-button__icon {
      color: var(--button_icon-color, functions.semantic-color(icons-inverse));
    }

    &:not(:disabled) {
      @include mixins.hover() {
        background-color: functions.semantic-color(kind-success-hover);
      }
      @include mixins.popover-trigger {
        background-color: functions.semantic-color(kind-success-active);
      }
    }

    &:active:not(:disabled) {
      background-color: functions.semantic-color(kind-success-active);
    }

    &:disabled {
      background-color: functions.semantic-color(kind-primary-disabled);
      color: functions.semantic-color(text-disabled);

      .pupa-button__icon {
        color: functions.semantic-color(icons-disabled);
      }
    }
  }

  &_warning.pupa-button_active {
    background-color: functions.semantic-color(kind-warning-pressed);
  }

  &_warning {
    background-color: functions.semantic-color(kind-warning-normal);
    color: var(--button_text-color, functions.semantic-color(text-inverse));

    .pupa-button__icon {
      color: var(--button_icon-color, functions.semantic-color(icons-inverse));
    }

    &:not(:disabled) {
      @include mixins.hover() {
        background-color: functions.semantic-color(kind-warning-hover);
      }
      @include mixins.popover-trigger {
        background-color: functions.semantic-color(kind-warning-active);
      }
    }

    &:active:not(:disabled) {
      background-color: functions.semantic-color(kind-warning-active);
    }

    &:disabled {
      background-color: functions.semantic-color(kind-primary-disabled);
      color: functions.semantic-color(text-disabled);

      .pupa-button__icon {
        color: functions.semantic-color(icons-disabled);
      }
    }
  }

  &_danger.pupa-button_active {
    background-color: functions.semantic-color(kind-danger-pressed);
  }

  &_danger {
    background-color: functions.semantic-color(kind-danger-normal);
    color: var(--button_text-color, functions.semantic-color(text-inverse));

    .pupa-button__icon {
      color: var(--button_icon-color, functions.semantic-color(icons-inverse));
    }

    &:not(:disabled) {
      @include mixins.hover() {
        background-color: functions.semantic-color(kind-danger-hover);
      }
      @include mixins.popover-trigger {
        background-color: functions.semantic-color(kind-danger-active);
      }
    }

    &:active:not(:disabled) {
      background-color: functions.semantic-color(kind-danger-active);
    }

    &:disabled {
      background-color: functions.semantic-color(kind-primary-disabled);
      color: functions.semantic-color(text-disabled);

      .pupa-button__icon {
        color: functions.semantic-color(icons-disabled);
      }
    }
  }
}
