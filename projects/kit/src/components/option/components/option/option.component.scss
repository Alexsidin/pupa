@use 'functions';
@use 'mixins';
@use 'variables';

.pupa-option {
  all: unset;
  box-sizing: border-box;
  height: 100%;
  display: flex;
  align-items: center;
  background-color: transparent;
  border-radius: variables.$controlBorderRadius;
  cursor: pointer;
  padding: 0 3rem;
  @include mixins.no-tap-highlight();
  @include mixins.font-size-s();

  &--selected {
    position: relative;
    background-color: functions.semantic-color(kind-neutral-selected);
    border-radius: variables.$controlBorderRadius;
    overflow: hidden;

    &::after {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      content: '';
      width: 0.5rem;
      background-color: functions.semantic-color(kind-primary-normal);
      pointer-events: none;
    }
  }

  &__content {
    min-height: var(--option_min-height, 8rem);
    gap: 3rem;

    &-container {
      display: flex;
      align-items: center;
      gap: 3rem;
      margin-right: 3rem;
      overflow-x: hidden;
    }

    width: 100%;
    display: flex;
    align-items: center;
    overflow: hidden;
    color: functions.semantic-color(text-primary);

    .pupa-option__checkbox {
      width: fit-content;
    }
  }

  &__actions {
    display: flex;
    align-items: center;
    gap: 2rem;
    height: 100%;
    background: transparent;
    width: fit-content;
    justify-content: flex-end;
  }

  &--disabled {
    cursor: not-allowed;

    .pupa-option__content {
      &-container {
        color: functions.semantic-color(text-disabled);
      }
    }
  }

  &:not(:disabled, &--disabled) {
    @include mixins.hover() {
      background-color: functions.semantic-color(kind-opacity-hover);
    }
  }

  &:active:not(:disabled, &--disabled) {
    background-color: functions.semantic-color(kind-opacity-pressed);
  }

  &:focus-visible {
    outline: 2px solid functions.semantic-color(lines-accent);
  }
}
