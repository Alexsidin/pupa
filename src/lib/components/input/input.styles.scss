@use 'sass:map';
@use 'sass:string';

@import 'themes/functions';
@import 'mixins';
@import 'functions';

@mixin large {
  @include font-size-large();
  @include font-type-point();
}

@mixin medium {
  font-size: 3rem;
  line-height: 4rem;
  @include font-type-caption();
}

@mixin small {
  @include font-type-caption();
  @include font-size-mark();
}

$light: (
  input: (
    color: color(base-n600),
    caret-color: color(base-n600),
    background-color: color(base-white-n500),
    placeholder: (
      color: color(base-n600)
    )
  ),
  hover: (
    background-color: color(base-white-n400)
  ),
  disabled: (
    color: color(base-white-n250),
    background-color: color(base-white-n500),
    placeholder: (
      color: color(base-white-n250)
    )
  ),
  invalid: (
    border-color: color(red-n400)
  ),
  focus: (
    background-color: color(base-n0),
    border-color: color(base-white-n275),
    placeholder: (
      color: color(base-white-n275)
    )
  ),
  active: (
    background-color: color(base-white-n300)
  )
);
$dark: (
  input: (
    color: color(base-n0),
    caret-color: color(base-n0),
    background-color: color(base-dark-n500),
    placeholder: (
      color: color(base-n0)
    )
  ),
  hover: (
    background-color: color(base-dark-n400)
  ),
  disabled: (
    color: color(base-dark-n250),
    background-color: color(base-dark-n500),
    placeholder: (
      color: color(base-dark-n250)
    )
  ),
  invalid: (
    border-color: color(red-n400)
  ),
  focus: (
    background-color: color(base-n600),
    border-color: color(base-dark-n275),
    placeholder: (
      color: color(base-dark-n275)
    )
  ),
  active: (
    background-color: color(base-dark-n300)
  )
);

:host {
  box-sizing: border-box;
  position: relative;
  width: 100%;
  @include flex-container(row, center, flex-start);
}

.input {
  z-index: 2;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  outline: none;
  width: 100%;
  border-radius: 1px;
  box-sizing: border-box;
  border: 1px solid transparent;
  color: map.get($light, input, color);
  caret-color: map.get($light, input, caret-color);
  background-color: map.get($light, input, background-color);
  &:-webkit-autofill {
    border-color: map.get($light, input, background-color);
    -webkit-text-fill-color: map.get($light, input, color);
    box-shadow: none;
    -webkit-box-shadow: 0 10rem 0 0 map.get($light, input, background-color) inset;
  }

  &::placeholder {
    opacity: 0;
    will-change: opacity;
    color: map.get($light, input, placeholder, color);
  }
  &__icons-list {
    z-index: 3;
    position: absolute;
    overflow: hidden;
    top: 1px;
    bottom: 1px;
    right: 0;
    box-sizing: border-box;
    height: calc(100% - 2px);
    @include flex-container(row, center);
    width: fit-content;
    background-color: transparent;
    gap: 1px;
    &:not(:empty).large {
      @include large();
      right: 3rem;
    }
    &:not(:empty).medium {
      @include medium();
      right: 2rem;
    }
    &:not(:empty).small {
      @include small();
      right: 1rem;
    }
  }

  &__icon {
    position: relative;
    opacity: 0;
    will-change: opacity;
    &:focus,
    &:active,
    &:hover,
    &-invalid,
    &-phone-locale,
    &-calendar {
      opacity: 1;
    }
  }

  &_filled ~ .input__icons-list {
    .input__icon-reset,
    .input__icon-password {
      opacity: 1;
    }
  }

  &_large {
    height: 10rem;
    padding: 2rem 5rem;
    @include large();
    &::placeholder {
      @include font-type-caption();
    }
  }
  &_medium {
    height: 8rem;
    font-size: 3rem;
    line-height: 4rem;
    @include font-type-caption();
    padding: 2rem 4rem;
    @include medium();
  }
  &_small {
    height: 6rem;
    padding: 2rem 3rem;
    @include small();
  }

  &:hover:not(:focus):not([disabled]) {
    background-color: map.get($light, hover, background-color);
    &:-webkit-autofill {
      box-shadow: none;
      -webkit-box-shadow: 0 10rem 0 0 map.get($light, hover, background-color) inset;
    }
    &:-webkit-autofill {
      &:not(.input_invalid) {
        border-color: map.get($light, hover, background-color);
      }
    }
  }

  &:active:not(:focus):not([disabled]) {
    border-color: transparent;
    background-color: map.get($light, active, background-color);
    &:-webkit-autofill {
      border-color: map.get($light, active, background-color);
      box-shadow: none;
      -webkit-box-shadow: 0 10rem 0 0 map.get($light, active, background-color) inset;
    }
    &::placeholder {
      opacity: 1;
    }
  }

  &:focus:not([disabled]) {
    cursor: text;
    & ~ .input__icons-list {
      .input__icon-password {
        opacity: 1;
      }
    }
    &::placeholder {
      opacity: 1;
      color: map.get($light, focus, placeholder, color);
    }
    &:not(.input_invalid) {
      border-color: map.get($light, focus, border-color);
      &:-webkit-autofill {
        border-color: map.get($light, focus, border-color);
      }
    }
    background-color: map.get($light, focus, background-color);
    &:-webkit-autofill {
      box-shadow: none;
      -webkit-box-shadow: 0 10rem 0 0 map.get($light, focus, background-color) inset;
    }
  }

  &_invalid {
    border-color: map.get($light, invalid, border-color);
    &:-webkit-autofill {
      border-color: map.get($light, invalid, border-color);
    }
  }

  &[disabled] {
    border-color: transparent;
    cursor: not-allowed;
    color: map.get($light, disabled, color);
    background-color: map.get($light, disabled, background-color);
    &:-webkit-autofill {
      -webkit-text-fill-color: map.get($light, disabled, color);
      box-shadow: none;
      -webkit-box-shadow: 0 10rem 0 0 map.get($light, disabled, background-color) inset;
      border-color: map.get($light, disabled, background-color);
    }
    &::selection {
      background: transparent;
    }
    &::placeholder {
      opacity: 1;
      color: map.get($light, disabled, placeholder, color);
    }
    ~ .input__icons-list {
      display: none;
    }
  }

  @include host-selector-dark-theme() {
    color: map.get($dark, input, color);
    caret-color: map.get($dark, input, caret-color);
    background-color: map.get($dark, input, background-color);
    &:-webkit-autofill {
      -webkit-text-fill-color: map.get($dark, input, color);
      box-shadow: none;
      -webkit-box-shadow: 0 10rem 0 0 map.get($dark, input, background-color) inset;
      border-color: map.get($dark, input, background-color);
    }
    &::placeholder {
      color: map.get($dark, input, placeholder, color);
    }
    &:hover:not(:focus):not([disabled]) {
      background-color: map.get($dark, hover, background-color);
      &:-webkit-autofill {
        box-shadow: none;
        -webkit-box-shadow: 0 10rem 0 0 map.get($dark, hover, background-color) inset;
        &:not(.input_invalid) {
          border-color: map.get($dark, hover, background-color);
        }
      }
    }
    &:active:not(:focus):not([disabled]) {
      color: map.get($dark, active, color);
    }
    &:focus {
      background-color: map.get($dark, focus, background-color);
      &::placeholder {
        color: map.get($dark, focus, placeholder, color);
      }
      &:not(.input_invalid) {
        border-color: map.get($dark, focus, border-color);
        &:-webkit-autofill {
          border-color: map.get($dark, focus, border-color);
        }
      }
      &:-webkit-autofill {
        box-shadow: none;
        -webkit-box-shadow: 0 10rem 0 0 map.get($dark, focus, background-color) inset;
      }
    }
    &_invalid {
      border-color: map.get($dark, invalid, border-color);
      &:-webkit-autofill {
        border-color: map.get($dark, invalid, border-color);
      }
    }
    &[disabled] {
      color: map.get($dark, disabled, color);
      background-color: map.get($dark, disabled, background-color);
      &:-webkit-autofill {
        -webkit-text-fill-color: map.get($dark, disabled, color);
        box-shadow: none;
        -webkit-box-shadow: 0 10rem 0 0 map.get($dark, disabled, background-color) inset;
        border-color: map.get($dark, disabled, background-color);
      }
      &::placeholder {
        color: map.get($dark, disabled, placeholder, color);
      }
    }
  }
}

// to show icons or placeholder - used their host-hover
:host:hover {
  .input__icons-list .input__icon:not(.input__icon-password) {
    opacity: 1;
  }
  .input:not(:focus):not([disabled]) {
    &::placeholder {
      opacity: 1;
    }
  }
}
