// @import 'themes/functions';
// @import 'mixins';
// @import 'functions';

// // $width_time-seconds: 108px;
// // $width_time: 74px;

// // .base-input-container {
// //   box-sizing: border-box;
// //   outline: none;
// //   position: relative;
// //   display: flex;
// //   align-items: center;
// //   justify-content: flex-start;
// //   flex-wrap: nowrap;
// //   width: 100%;

// //   background-color: transparent;
// //   outline: none;
// //   border-radius: 2rem;
// //   border: 1px solid transparent;
// //   overflow-y: hidden;
// // }

// // .input {
// //   width: 100%;

// //   box-sizing: border-box;
// //   padding: 0 8rem 0 2rem;

// //   background-color: color(white);
// //   border: 1px solid color(grey-ivory);
// //   border-radius: 2rem;
// //   color: color(text);
// //   outline: none;
// //   height: 8rem;
// //   font-size: 4rem;
// //   line-height: 1;

// //   @include regular();
// //   @include transition(#{'background, border, color'});
// //   @include flex-container(row, center, space-between, nowrap);

// //   &::placeholder {
// //     color: color(grey-light);
// //     @include transition(#{'color'});
// //   }

// //   &:not([disabled]):focus {
// //     border-color: color(active);
// //   }

// //   &:disabled {
// //     color: color(grey-apple);
// //     cursor: not-allowed;
// //     user-select: none;
// //     border-color: color(grey-apple);

// //     &::placeholder {
// //       color: color(grey-apple);
// //     }

// //     &::selection {
// //       background: transparent;
// //     }
// //   }

// //   &__text {
// //     max-width: calc(100% - 4rem);
// //     @include ellipsis-text-overflow;
// //   }

// //   &__medium {
// //     height: 8rem;
// //     font-size: 4rem;
// //     line-height: 1;
// //     padding: 2rem 3rem;
// //   }

// //   &__small {
// //     height: 6rem;
// //     font-size: variable(font-size_base-text);
// //     line-height: 1.14;
// //     padding: 1rem 2rem;
// //   }

// //   &__large {
// //     height: 10rem;
// //     font-size: 24px;
// //     line-height: 1.08;
// //     padding: 2rem 3rem;
// //     @include medium();
// //   }

// //   &__focused:not([disabled]) {
// //     border-color: color(active);
// //   }

// //   &__invalid:not([disabled]) {
// //     border-color: color(error);
// //     &:focus {
// //       border-color: color(error);
// //     }
// //   }

// //   &__transparent {
// //     border: none;
// //     background-color: transparent;
// //     &:focus {
// //       border: none;
// //     }

// //     &.input__invalid {
// //       border: 1px solid color(error);
// //     }
// //   }
// // }

// // .dropdown-trigger {
// //   width: 100%;
// //   display: block;
// // }

// // .icon {
// //   position: absolute;
// //   right: 2rem;
// //   color: color(success);
// //   font-size: 4rem;
// //   height: 4rem;
// //   pointer-events: none;

// //   &__calendar {
// //     color: inherit;
// //   }
// // }

@use 'sass:map';
@use 'sass:string';

@import 'themes/functions';
@import 'mixins';
@import 'functions';

$light: (
  input: (
    color: color(base-n600),
    caret-color: color(base-n600),
    background-color: color(base-white-n500),
    placeholder: (
      color: color(base-n600)
    )
  ),
  hover: (
    background-color: color(base-white-n400)
  ),
  disabled: (
    color: color(base-white-n250),
    background-color: color(base-white-n500),
    placeholder: (
      color: color(base-white-n250)
    )
  ),
  invalid: (
    border-color: color(red-n400)
  ),
  focus: (
    background-color: color(base-n0),
    border-color: color(base-white-n275)
  ),
  active: (
    background-color: color(base-white-n300)
  )
);
$dark: (
  input: (
    color: color(base-n0),
    caret-color: color(base-n0),
    background-color: color(base-dark-n500),
    placeholder: (
      color: color(base-n0)
    )
  ),
  hover: (
    background-color: color(base-dark-n400)
  ),
  disabled: (
    color: color(base-dark-n250),
    background-color: color(base-dark-n500),
    placeholder: (
      color: color(base-dark-n250)
    )
  ),
  invalid: (
    border-color: color(red-n400)
  ),
  focus: (
    background-color: color(base-dark-n600),
    border-color: color(base-dark-n275)
  ),
  active: (
    background-color: color(base-dark-n300)
  )
);

:host {
  box-sizing: border-box;
  position: relative;
  @include flex-container(row, center, flex-start);
}

.input {
  z-index: 2;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  outline: none;
  width: 100%;
  border-radius: 1px;
  box-sizing: border-box;
  border: 1px solid transparent;
  color: map.get($light, input, color);
  caret-color: map.get($light, input, caret-color);
  background-color: map.get($light, input, background-color);

  &::placeholder {
    opacity: 0;
    will-change: opacity;
    color: map.get($light, input, placeholder, color);
  }
  &__icons-list {
    z-index: 3;
    position: absolute;
    overflow: hidden;
    top: 1px;
    bottom: 1px;
    right: 0;
    box-sizing: border-box;
    padding-left: 2px;
    padding-right: 2px;
    height: calc(100% - 2px);
    @include flex-container(row, center);
    width: fit-content;
    background-color: transparent;
    gap: 1px;
    &:empty {
      padding: 0;
    }
    &:not(:empty).large {
      right: 3rem;
    }
    &:not(:empty).medium {
      right: 2rem;
    }
    &:not(:empty).small {
      right: 1rem;
    }
  }

  &__icon {
    position: relative;
    opacity: 0;
    will-change: opacity;
    &-invalid,
    &-phone-locale,
    &-calendar {
      opacity: 1;
    }
  }

  &_filled ~ .input__icons-list .input__icon-reset {
    opacity: 1;
  }

  &_large {
    height: 10rem;
    @include font-size-large();
    @include font-type-point();
    padding: 2rem 5rem;
    &::placeholder {
      @include font-type-caption();
    }
  }
  &_medium {
    height: 8rem;
    font-size: 3rem;
    line-height: 4rem;
    @include font-type-caption();
    padding: 2rem 4rem;
  }
  &_small {
    height: 6rem;
    @include font-type-caption();
    @include font-size-mark();
    padding: 2rem 3rem;
  }

  &:hover:not(:focus):not([disabled]) {
    background-color: map.get($light, hover, background-color);
  }

  &:active:not(:focus):not([disabled]) {
    border-color: transparent;
    background-color: map.get($light, active, background-color);
    &::placeholder {
      opacity: 1;
    }
  }

  &:focus:not([disabled]) {
    cursor: text;
    &::placeholder {
      opacity: 1;
    }
    &:not(.input_invalid) {
      border-color: map.get($light, focus, border-color);
    }
    background-color: map.get($light, focus, background-color);
  }

  &_invalid {
    border-color: map.get($light, invalid, border-color);
  }

  &[disabled] {
    border-color: transparent;
    cursor: not-allowed;
    color: map.get($light, disabled, color);
    background-color: map.get($light, disabled, background-color);
    &::selection {
      background: transparent;
    }
    &::placeholder {
      opacity: 1;
      color: map.get($light, disabled, placeholder, color);
    }
    ~ .input__icons-list {
      display: none;
    }
  }

  @include host-selector-dark-theme() {
    color: map.get($dark, input, color);
    caret-color: map.get($dark, input, caret-color);
    background-color: map.get($dark, input, background-color);
    &::placeholder {
      color: map.get($dark, input, placeholder, color);
    }
    &:hover:not(:focus):not([disabled]) {
      background-color: map.get($dark, hover, background-color);
    }
    &:active:not(:focus):not([disabled]) {
      color: map.get($dark, active, color);
    }
    &:focus {
      background-color: map.get($dark, focus, background-color);
      border-color: map.get($dark, focus, border-color);
    }
    &[disabled] {
      color: map.get($dark, disabled, color);
      background-color: map.get($dark, disabled, background-color);
      &::placeholder {
        color: map.get($dark, disabled, placeholder, color);
      }
    }
  }
}

// to show icons or placeholder - used their host-hover
:host:hover {
  .input__icons-list .input__icon {
    opacity: 1;
  }
  .input:not(:focus):not([disabled]) {
    &::placeholder {
      opacity: 1;
    }
  }
}
