@use 'sass:list';
@use 'sass:math';
@use 'sass:map';

@use 'mixins' as *;
@use 'demo/styles/demo-functions' as *;
@use 'demo/styles/demo-mixins' as *;
@use 'demo/styles/demo-variables' as *;

.not-found {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  min-height: 100vh;
  text-align: center;

  @include apply-theme-dependent-property(background-color, $theme-config, [body, background-color]);

  &__error {
    width: 100%;
    height: 100%;
    text-transform: uppercase;
    font-weight: bold;
    animation: glitch 2s steps(100) infinite;

    @include apply-theme-dependent-property(color, $theme-config, [body, font-color]);

    @include width-between-property(
      $property: 'font-size',
      $width-start: $xsBreakPoint,
      $value-start: 40 * 4,
      $width-end: $mdBreakPoint,
      $value-end: 70 * 4,
      $is-save-width-before: false,
      $is-save-width-after: true
    );
  }

  &__text {
    @include apply-theme-dependent-property(color, $theme-config, [body, font-color]);

    margin-top: 0;
    @include font-size-large();
    @include font-type-caption();
  }

  &__action {
    margin: 0 10px;
  }
}

$red-color: rgba(255, 0, 0, 1);
$green-color: rgba(0, 255, 0, 1);
$blue-color: rgba(0, 0, 255, 1);

$text-shadow-size: 0;

@mixin mini-glitch($first-color, $second-color, $shadow-size-coefficient, $percents) {
  $from: list.nth($percents, 1);
  $to: list.nth($percents, 2);

  $interval: math.div($to - $from, 2);

  @for $i from $from through $to {
    #{$i * 1%} {
      @if $i < $from + $interval {
        $text-shadow-size: $text-shadow-size + $shadow-size-coefficient;
        text-shadow: #{$text-shadow-size}px 0 0 $first-color, #{-$text-shadow-size}px 0 0 $second-color;
      } @else {
        $text-shadow-size: $text-shadow-size - 1;
        text-shadow: #{$text-shadow-size}px 0 0 $first-color, #{-$text-shadow-size}px 0 0 $second-color;
      }
    }
  }
}

@mixin big-glitch($first-color, $second-color, $shadow-distance, $percents) {
  $from: list.nth($percents, 1);
  $to: list.nth($percents, 2);

  @for $i from $from through $to {
    #{$i * 1%} {
      @if $i == $to {
        text-shadow: 0 0 0 $first-color, 0 0 0 $second-color;
      } @else {
        text-shadow: #{$shadow-distance}px 0 0 $first-color, #{-$shadow-distance}px 0 0 $second-color;
      }
    }
  }
}

// errors below only in vs code
@keyframes glitch {
  @include mini-glitch($red-color, $blue-color, 1, [0, 10]);
  @include mini-glitch($red-color, $green-color, 0.5, [11, 20]);
  @include mini-glitch($blue-color, $green-color, 0.7, [21, 40]);

  @include big-glitch($blue-color, $green-color, 50, [41, 42]);

  @include mini-glitch($red-color, $green-color, 0.5, [43, 50]);
  @include mini-glitch($red-color, $blue-color, 1, [51, 60]);

  @include big-glitch($red-color, $green-color, 30, [61, 62]);

  @include mini-glitch($red-color, $blue-color, 0.5, [63, 70]);

  @include big-glitch($red-color, $blue-color, 70, [71, 72]);

  @include mini-glitch($red-color, $blue-color, 1, [73, 80]);
  @include mini-glitch($red-color, $green-color, 0.5, [81, 90]);

  @include big-glitch($green-color, $blue-color, 60, [91, 92]);

  @include mini-glitch($blue-color, $green-color, 0.7, [92, 100]);
}
