@use 'mixins' as *;
@use 'functions' as *;
@use 'variables' as *;
@use 'demo-mixins' as *;
@use 'demo-variables' as *;

.main-page {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  text-align: center;

  @include apply-theme-dependent-property(background-color, $theme-config, [body, background-color]);

  &__wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    height: 100vh;
  }

  &__logo-title {
    height: auto;
    width: 200px;

    @include width-between-property(
      $property: 'width',
      $width-start: $xsBreakPoint,
      $value-start: 300,
      $width-end: $xxlBreakPoint,
      $value-end: 500,
      $is-save-width-before: false,
      $is-save-width-after: true
    );
  }

  .parallax {
    perspective: 1000px;
    transition: transform 0.2s ease-out;
    transform-style: preserve-3d;
    will-change: transform;
    position: relative;

    @mixin width-between-parallax-size($property) {
      @include width-between-property(
        $property: $property,
        $width-start: $xsBreakPoint,
        $value-start: 128,
        $width-end: $lgBreakPoint,
        $value-end: 256,
        $is-save-width-before: false,
        $is-save-width-after: true
      );
    }

    @include width-between-parallax-size('width');
    @include width-between-parallax-size('height');

    &__item {
      border: 5px solid color(primary-n200);
      border-radius: 26%;

      box-sizing: border-box;
      position: absolute;
      transform-style: preserve-3d;
      will-change: transform;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;

      @for $i from 1 through 4 {
        &:nth-child(#{$i}) {
          transform: translateZ(calc(#{$i} * 40px));

          @include lt-md() {
            transform: translateZ(calc(#{$i} * 35px));
          }

          @include lt-sm() {
            transform: translateZ(calc(#{$i} * 25px));
          }
        }
      }
    }
  }
}
